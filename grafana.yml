- name: Grafana server
  hosts: service_grafana
  become: yes
  tasks:
    - name: Gather facts from ALL hosts (regardless of limit or tags)
      setup:
      delegate_to: "{{ item }}"
      delegate_facts: True
      when: hostvars[item]['ansible_default_ipv4'] is not defined
      with_items: "{{ groups['all'] }}"

    - name: Set required ip variables
      set_fact:
        redis_ip: "{{ hostvars[groups['service_redis'] | first]['private_ip'] }}"

    - name: Run grafana container
      community.docker.docker_container:
        name: "{{ grafana_container_name }}"
        image: "{{ grafana_image }}"
        state: started
        restart_policy: always
        published_ports:
          - "{{ grafana_port }}:3000"
        mounts:
          - source: grafana_volume
            target: /var/lib/grafana
        env:
          GF_INSTALL_PLUGINS: "{{ grafana_plugins | join(', ') }}"
        # healthcheck:
        #   test: ["CMD-SHELL", "curl --output /dev/null --silent --fail http://127.0.0.1:3000/api/health || exit 1"]

    - name: Add prometheus directory
      file:
        path: "{{ prometheus_config_dir }}"
        state: directory
        owner: "{{ docker_files_owner }}"
        group: "{{ docker_group }}"
        mode: "{{ docker_dir_mode }}"
    
    - name: Add prometheus config files with all adresses
      ansible.builtin.template:
        src: "{{ prometheus_config_template }}"
        dest: "{{ prometheus_config }}"
        owner: "{{ docker_files_owner }}"
        group: "{{ docker_group }}"
        mode: "{{ docker_files_mode }}"

    - name: Run prometheus container
      community.docker.docker_container:
        name: "{{ prometheus_container_name }}"
        image: "{{ prometheus_image }}"
        state: started
        restart_policy: always
        published_ports:
          - "{{ prometheus_port }}:9090"
        mounts:
          - source: prom_data
            target: /prometheus
          - source: prom_configs
            target: /etc/prometheus
          - type: bind
            source: "{{ prometheus_config }}"
            target: /etc/prometheus/prometheus.yml
        # healthcheck:
        #   test: ["CMD-SHELL", "curl --output /dev/null --silent --fail http://127.0.0.1:9090/status || exit 1"]

    - name: Add bridge network between prometheus and grafana
      docker_network:
        name: grafana_prometheus_bridge
        connected:
          - "{{ grafana_container_name }}"
          - "{{ prometheus_container_name }}"

    - name: Configure grafana datasources
      community.grafana.grafana_datasource:
        name: "{{ item.name }}"
        ds_type: "{{ item.type }}"
        ds_url: "{{ item.url }}"
        access: proxy
        tls_skip_verify: true
        grafana_url: "{{ grafana_url }}"
      loop: "{{ grafana_datasources }}"

    - name: Configure grafana dashboards 
      community.grafana.grafana_dashboard:
        dashboard_url: "{{ item.url }}"
        grafana_url: "{{ grafana_url }}"
      loop: "{{ grafana_dashboards }}"
