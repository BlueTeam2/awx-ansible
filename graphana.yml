- name: Graphana server
  hosts: service_grafana
  become: yes
  vars:
    grafana_image: grafana/grafana:8.5.3-ubuntu
    grafana_name: grafana
    prometheus_name: prometheus
    prometheus_image: prom/prometheus:v2.36.0
    prometheus_config_dir: "/etc/docker/prometheus"
    prometheus_config: "prometheus.yml"

  pre_tasks:
    - name: Gather facts from ALL hosts (regardless of limit or tags)
      setup:
      delegate_to: "{{ item }}"
      delegate_facts: True
      when: hostvars[item]['ansible_default_ipv4'] is not defined
      with_items: "{{ groups['all'] }}"

  roles:
    - install_docker
  post_tasks:
    - name: Run graphana container
      community.docker.docker_container:
        name: "{{ grafana_name }}"
        state: started
        image: "{{ grafana_image }}"
        restart_policy: always
        published_ports:
          - "{{ grafana_port }}:3000"
        mounts:
          - source: graphana_volume
            target: /var/lib/grafana

    - name: Add prometheus directory
      file:
        path: "{{ prometheus_config_dir }}"
        state: directory
        owner: "{{ files_owner }}"
        group: docker
        mode: "{{ docker_dir_mode }}"
    
    - name: Add prometheus config files with all adresses
      ansible.builtin.template:
        src: ./templates/prometheus_default.j2
        dest: "{{ prometheus_config_dir }}/{{ prometheus_config }}"
        owner: "{{ files_owner }}"
        group: docker
        mode: "{{ files_mode }}"

    - name: Run prometheus container
      community.docker.docker_container:
        name: "{{ prometheus_name }}"
        state: started
        image: "{{ prometheus_image }}"
        restart_policy: always
        published_ports:
          - "{{ prometheus_port }}:9090"
        mounts:
          - source: prom_data
            target: /prometheus
          - source: prom_configs
            target: /etc/prometheus
          - type: bind
            source: "{{ prometheus_config_dir }}/{{ prometheus_config }}"
            target: /etc/prometheus/prometheus.yml

    - name: Add bridge network between prometheus and grafana
      docker_network:
        name: grafana_prometheus_bridge
        connected:
          - "{{ grafana_name }}"
          - "{{ prometheus_name }}"

    # - name: Run node exporter container
    #   community.docker.docker_container:
    #     name: node-exporter
    #     state: started
    #     image: "{{ node_exporter_image }}"
    #     restart_policy: always
    #     published_ports:
    #       - "{{ node_exporter_port }}:9100"
    #     mounts:
    #       - type: bind
    #         source: /proc
    #         target: /host/proc:ro
    #       - type: bind
    #         source: /sys
    #         target: /host/sys:ro
    #       - type: bind
    #         source: /
    #         target: /rootfs:ro
