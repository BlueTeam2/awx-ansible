---
- name: Postgres server
  hosts: localhost
  vars:
    gcp_project: "YOUR_PROJECT_ID"

    postgres_port: 5432
    postgres_admin_user: "YOUR_ADMIN_USER"
    postgres_admin_password: "YOUR_ADMIN_PASSWORD"
    postgres_schedule_database_name: schedule
    postgres_restore_dump: true
    postgres_initial_data_dest: "./files/initial_data.sql"
    postgre_admin_roles: "CREATEDB"

  tasks:
    - name: get info on an instance
      gcp_sql_instance_info:
        project: "{{ gcp_project }}"
        auth_kind: serviceaccount
      register: sql_instances

    - name: Extract specific instance
      ansible.builtin.set_fact:
        postgres_instance: >-
          {{ 
            sql_instances.resources |
            selectattr('settings.userLabels.app', 'defined') |
            selectattr('settings.userLabels.app', 'equalto', 'schedule')
          }}
        
    - name: Extract instace ip
      ansible.builtin.set_fact:
        postgres_host: >-
          {{ 
            postgres_instance |
            map(attribute='ipAddresses') |
            flatten |
            selectattr('type', 'equalto', 'PRIMARY') |
            map(attribute='ipAddress') |
            first
          }}
        postgres_instace: >-
          {{ 
            sql_instances.resources |
            selectattr('settings.userLabels.app', 'defined') |
            selectattr('settings.userLabels.app', 'equalto', 'schedule') |
            map(attribute='name') |
            first |
            trim
          }}

    - name: Create admin user
      google.cloud.gcp_sql_user:
        instance:
          name: "{{ postgres_instace }}"
        host: "" # This has to be empty for PostgresSQL. See https://github.com/ansible-collections/google.cloud/issues/514 
        name: "{{ postgres_admin_user }}"
        password: "{{ postgres_admin_password }}"
        project: "{{ gcp_project }}"
        auth_kind: serviceaccount
        state: present
      no_log: true # Ensure not to log password

    - name: Create database
      community.postgresql.postgresql_db:
        login_host: "{{ postgres_host  }}"
        login_user: "{{ postgres_admin_user  }}"
        login_password: "{{ postgres_admin_password  }}"
        port: "{{ postgres_port  }}"
        name: "{{ postgres_schedule_database_name }}"
        owner: "{{ postgres_admin_user }}"
        state: present
        
    - name: Restore dump for stage and dev envirnoment
      community.postgresql.postgresql_db:        
        login_host: "{{ postgres_host  }}"
        login_user: "{{ postgres_admin_user  }}"
        login_password: "{{ postgres_admin_password  }}"
        name: "{{ postgres_schedule_database_name }}"
        state: restore
        target: "{{ postgres_initial_data_dest }}"
      when: postgres_restore_dump
      