- name: Vault configuration
  hosts: localhost
  become: no
  no_log: true # Ensure not to log credentials
  tasks:
    - name: Gather ip's from necessary hosts
      ansible.builtin.setup.setup:
        gather_subset: all_ipv4_addresses
      delegate_to: "{{ item }}"
      delegate_facts: True
      when: hostvars[item]['public_ip'] is not defined
      with_items: "{{ groups['env_'+app_env] }}"

    - name: Get info of an postgres instance
      gcp_sql_instance_info:
        project: "{{ lookup('ansible.builtin.env', gcp_project_env)  }}"
        auth_kind: serviceaccount
      register: sql_instances

    - name: Set secret to upage
      ansible.builtin.set_fact:
        postgres_to_update:
          ip: |-
              {{ 
                sql_instances.resources |
                selectattr('settings.userLabels.app', 'defined') |
                selectattr('settings.userLabels.app', 'equalto', 'schedule') |
                selectattr('settings.userLabels.env', 'equalto', app_env) |
                map(attribute='ipAddresses') |
                flatten |
                selectattr('type', 'equalto', 'PRIMARY') |
                map(attribute='ipAddress') |
                first
              }}
        mongodb_to_update:
          url: "{{ hostvars[groups['service_mongodb'] | first]['public_ip'] }}"


    - name: Read current mongodb secret from the vault
      community.hashi_vault.vault_kv2_get:
        url: "{{ hashicorp_vault_server }}"
        auth_method: "userpass"
        username: "{{ hashicorp_vault_ansible_username }}"
        password: "{{ hashicorp_vault_ansible_password }}"
        engine_mount_point: "{{ hashicorp_vault_application_mount_point }}"
        path: "{{ hashicorp_vault_mongodb_path }}"
      register: current_mongodb

    - name: Update mongodb ip in the vault
      community.hashi_vault.vault_kv2_write:
        url: "{{ hashicorp_vault_server }}"
        auth_method: "userpass"
        username: "{{ hashicorp_vault_ansible_username }}"
        password: "{{ hashicorp_vault_ansible_password }}"
        engine_mount_point: "{{ hashicorp_vault_application_mount_point }}"
        path: "{{ hashicorp_vault_mongodb_path }}"
        data: >-
          {{ current_mongodb.secret | combine(mongodb_to_update) }}


    - name: Read current postgres secret from the vault
      community.hashi_vault.vault_kv2_get:
        url: "{{ hashicorp_vault_server }}"
        auth_method: "userpass"
        username: "{{ hashicorp_vault_ansible_username }}"
        password: "{{ hashicorp_vault_ansible_password }}"
        engine_mount_point: "{{ hashicorp_vault_application_mount_point }}"
        path: "{{ hashicorp_vault_postgres_path }}"
      register: current_postgres

    - name: Update postgres ip in the vault
      community.hashi_vault.vault_kv2_write:
        url: "{{ hashicorp_vault_server }}"
        auth_method: "userpass"
        username: "{{ hashicorp_vault_ansible_username }}"
        password: "{{ hashicorp_vault_ansible_password }}"
        engine_mount_point: "{{ hashicorp_vault_application_mount_point }}"
        path: "{{ hashicorp_vault_postgres_path }}"
        data: >-
          {{ current_postgres.secret | combine(postgres_to_update) }}
